#Include "Libs/miltant/ObstacleV2/Titlepack/Dialogs/Index.Script.txt"   as Dialogs
#Include "Libs/miltant/ObstacleV2/ManialinkLib.Script.txt"				as Styles
#Include "TextLib" as TL

#Const C_Dialog_Close "Prompt_Close"

#Struct K_Input {
	Text ControlId;
	Text Label;
	Text Default;
	Boolean Password;
	Boolean AutoFocus;
}

#Struct K_Image {
	Text URL;
	Text PlaceHolder;
	Integer Width;
	Integer Height;
}

#Struct K_Message {
	Text Label;
}

#Struct K_Button {
	Text ControlId;
	Text Label;
	Boolean Default;
}

#Struct K_Checkbox {
	Text ControlId;
	Text Label;
	Boolean Default;
}

#Struct Private_K_Dialog {
	Text Title;
	K_Message Message;
	Text Manialink;
	K_Button[] Buttons;
	Text[] Inputs;
	Real Height;
	Text BuildId;
}

declare Private_K_Dialog[] G_Dialogs;
declare Integer[] G_MessageQueue;

Integer NewDialog(Text _Title, K_Message _Message, K_Button[] _Buttons) {
	G_Dialogs.add(Private_K_Dialog {
		Title = _Title,
		Message = _Message,
		Buttons = _Buttons
	});
	return G_Dialogs.count - 1;
}

Integer NewDialog(Text _Title, K_Button[] _Buttons) {
	return NewDialog(_Title, K_Message{}, _Buttons);
}

Integer NewDialog(Text _Title, K_Message _Message) {
	return NewDialog(_Title, _Message, []);
}

Integer NewDialog(Text _Title) {
	return NewDialog(_Title, K_Message{}, []);
}

Void UpdateTitle(Integer _Dialog, Text _Title) {
	G_Dialogs[_Dialog].Title = _Title;
	G_Dialogs[_Dialog].BuildId = "";
	Dialogs::DestroyDialog("Prompt_" ^ _Dialog);
}

Void Add(K_Input _Control, Integer _Dialog) {
	declare ML_Text = "";
	if (_Control.Label != "") {
		ML_Text ^= """<label pos="10.375 -4" valign="center2" halign="center" text="{{{_Control.Label}}}"/>""";
	}

	declare Attr = """id="{{{_Control.ControlId}}}" default="{{{_Control.Default}}}" """;
	if (_Control.Password) {
		Attr ^= "textformat=\"Password\" ";
	}
	if (_Control.AutoFocus) {
		Attr ^= "class=\"Entry_Autofocus\" ";
	}

	ML_Text ^= """<quad pos="51.25" halign="center" size="102.5 8" scriptevents="1" data-focus="{{{_Control.ControlId}}}"/>""";
	ML_Text ^= """<entry {{{Attr}}}pos="51.25 -2" halign="center" selecttext="1" size="61 4" style="TextCardSmall"/>""";
	ML_Text ^= """<quad pos="51.25" halign="center" size="61 8" image="file://Media/Images/Obstacle/Dialogs/TextEdit.png"/>""";

	G_Dialogs[_Dialog].Manialink ^= """<frame pos="0 -{{{G_Dialogs[_Dialog].Height}}}" size="102.5 8">{{{ML_Text}}}</frame>""";
	G_Dialogs[_Dialog].Inputs.add(_Control.ControlId);
	G_Dialogs[_Dialog].Height += 10.;
}

Void Add(K_Image _Control, Integer _Dialog) {
	declare ML_Text = "";
	declare Attr = """size="{{{_Control.Width}}} {{{_Control.Height}}}" """;
	if (_Control.PlaceHolder != "") {
		Attr ^= "data-";
	}
	Attr ^= """image="{{{_Control.URL}}}" """;

	ML_Text ^= """<quad {{{Attr}}}pos="51.25" halign="center" id="Quad_LazyLoad" scriptevents="1"/>""";
	ML_Text ^= """<label pos="51.25 -{{{_Control.Height / 2}}}" size="101 {{{_Control.Height}}}" text="{{{_Control.PlaceHolder}}}" halign="center" valign="center2"/>""";

	G_Dialogs[_Dialog].Manialink ^= """<frame pos="0 -{{{G_Dialogs[_Dialog].Height}}}" size="102.5 {{{_Control.Height + 1.}}}">{{{ML_Text}}}</frame>""";
	G_Dialogs[_Dialog].Height += _Control.Height + 3.;
}

Void Build(Integer _Dialog) {
	declare TotalHeight = G_Dialogs[_Dialog].Height + 19.;
	declare Text ComputeFrameHeight = "";
	declare Frame_Message = "";
	declare Frame_Buttons = "";

	if (G_Dialogs[_Dialog].Message.Label != "") {
		Frame_Message = """<frame id="Frame_Message" pos="1 -19.67" size="100.5">""";
		Frame_Message ^= """<label id="Label_Message" textfont="light" textprefix="$fff" size="100.5" text="{{{G_Dialogs[_Dialog].Message.Label}}}" autonewline="1"/>""";
		Frame_Message ^= """</frame>""";
		ComputeFrameHeight = """//!
{
	declare CMlLabel Label <=> (Page.GetFirstChild("Label_Message") as CMlLabel);
	declare Real Height = Label.ComputeHeight(Label.Value);
	declare CMlFrame FrameMain <=> (Page.GetFirstChild("Frame_Main") as CMlFrame);
	FrameMain.Size.Y += Height + 3.;
	FrameMain.RelativePosition_V3.Y += Height / 2;
	declare CMlFrame FrameMessage <=> (Page.GetFirstChild("Frame_Message") as CMlFrame);
	FrameMessage.Size.Y = Height + 3.;
	declare CMlFrame FrameContent <=> (Page.GetFirstChild("Frame_Content") as CMlFrame);
	FrameContent.RelativePosition_V3.Y -= Height + 22.67;
}
		""";
	}

	if (G_Dialogs[_Dialog].Buttons.count > 0) {
		Frame_Buttons = """<frame id="Frame_Buttons" pos="0 -4.83" size="102.5 8">""";
		foreach (I => Button in G_Dialogs[_Dialog].Buttons) {
			declare Image = "image=\"file://Media/Images/Obstacle/Dialogs/BDefault21.png\" ";
			if (Button.Default) {
				Image = "image=\"file://Media/Images/Obstacle/Dialogs/BActive21.png\" ";
			}
			declare Position = """pos="{{{89.75 - (I * 23.)}}} -4" """;

			Frame_Buttons ^= """<label {{{Position}}}text="{{{Button.Label}}}" size="20.5" valign="center2" halign="center" textfont="regular" textsize="2.1" textcolor="fff"/>""";
			Frame_Buttons ^= """<quad {{{Image}}}{{{Position}}}id="{{{Button.ControlId}}}" halign="center" valign="center" size="21.67 6.67"
			scriptevents="1" data-target="{{{Button.ControlId}}}" data-anim-length="70"
			data-default-anim="<quad scale=&quot;1&quot;/>" data-target-anim="<quad scale=&quot;1.04&quot;/>"/>""";
		}
		Frame_Buttons ^= "</frame>";
		TotalHeight += 14.;
	}

	declare MS_CompileInputs = "";
	foreach (Input in G_Dialogs[_Dialog].Inputs) {
		MS_CompileInputs ^= ""","{{{Input}}}",(Page.GetFirstChild("{{{Input}}}") as CMlEntry).Value""";	
	}
	MS_CompileInputs ^= "]";
	
	declare ML_Text = """
<manialink version="3">
	<frame id="Frame_Main" pos="-51.25 {{{TotalHeight / 2}}}" size="102.5 {{{TotalHeight}}}">
		<frame id="Frame_Header">
			<label pos="3.7 -6.83" textfont="light" textcolor="fff" textsize="3.5" id="Label_Name" text="{{{G_Dialogs[_Dialog].Title}}}"/>
		</frame>

		{{{Frame_Message}}}

		<frame id="Frame_Content">
			<frame id="Frame_Body" pos="2 -9.5">
				{{{G_Dialogs[_Dialog].Manialink}}}
			</frame>

			{{{Frame_Buttons}}}
		</frame>
	</frame>
<script><![CDATA[
	#Include "MathLib" as ML
	#Include "TextLib" as TL
	#Include "ColorLib" as CL
	
	{{{Styles::GetDeclareGlobals()}}}
	

	main() {
		{{{/* Adapt the frame height depending on the text */ ""}}}
		{{{ComputeFrameHeight}}}

		Page.GetClassChildren("Entry_Autofocus", Page.MainFrame, True);
		if (Page.GetClassChildren_Result.count > 0)
			Page.GetClassChildren_Result[0].Focus();

		while (True) {

			foreach (Event in PendingEvents) {
				{{{Styles::GetEventLoopActiveItem()}}}
				if (Event.Type == CMlScriptEvent::Type::MouseClick) {
					if (Event.Control.Parent.ControlId == "Frame_Buttons") {
						SendCustomEvent("{{{C_Dialog_Close ^ _Dialog}}}", [Event.ControlId{{{MS_CompileInputs}}});
					}
					else if (Event.ControlId == "Quad_LazyLoad"){
						log(Event.Control.DataAttributeGet("image"));
						(Event.Control as CMlQuad).ChangeImageUrl(Event.Control.DataAttributeGet("image"));
					}
					else if (Event.Control.DataAttributeExists("focus")) {
						(Event.Control.Parent.GetFirstChild(Event.Control.DataAttributeGet("focus")) as CMlEntry)
							.Focus();
					}
				}
			}

			yield;
		}
	}
]]></script>
</manialink>
""";
	Dialogs::RegisterDialog("Prompt_" ^ _Dialog, ML_Text, C_Dialog_Close ^ _Dialog);   
	G_Dialogs[_Dialog].BuildId = "Prompt_" ^ _Dialog;
}

Void CloseDialog(Integer _Dialog) {
	Dialogs::AbortDialog("Auto" ^ G_Dialogs[_Dialog].BuildId);
}

Dialogs::K_Result Prompt(Integer _Dialog, Boolean _NoClose) {
	if (G_Dialogs[_Dialog].BuildId == "") {
		Build(_Dialog);
	}

	return Dialogs::Prompt(G_Dialogs[_Dialog].BuildId, "Auto" ^ G_Dialogs[_Dialog].BuildId, _NoClose);
}

Dialogs::K_Result Prompt(Integer _Dialog) {
	return Prompt(_Dialog, False);
}

Void Notice_Async(Text _Title, Text _Message) {
	G_MessageQueue.add(NewDialog(_Title, K_Message { Label = _Message }));
}

Void Loop() {
	if (G_MessageQueue.count > 0) {
		declare DialogState = Prompt(G_MessageQueue[0]);

		if (DialogState.Over) {
			G_MessageQueue.removekey(0);
		}
	}
}