#Include "Libs/miltant/ObstacleV2/ManialinkLib.Script.txt"						    as Styles
#Include "Libs/ahmad3/EventAPI/Types.Script.txt"								    as EventAPITypes
#Include "Libs/miltant/ObstacleV2/Titlepack/Menus/Windows.Script.txt"			    as Windows
#Include "Libs/miltant/ObstacleV2/Titlepack/Menus/Play/Campaign/Index.Script.txt"   as Campaign

#Include "TextLib" as TL

Text GetName() {
	return "campaign";
}

Text GetSideBarName() {
	return "L_CampaignSideBar";
}

Text BuildSideBar() {
	return """
<manialink version="3" name="{{{GetSideBarName()}}}">
{{{Styles::GetStyleSheet()}}}
<frame id="Frame_CampaignSideBar" pos="92.16 53.5">
	<framemodel id="CampaignEditionItem">
		<label id="Label_CampaignEdition" halign="center" textprefix="$t" class="lato" textcolor="" textsize="4.8" scriptevents="1"/>
	</framemodel>

	<frame>
		<frame pos="31 -24">
			<frameinstance modelid="CampaignEditionItem" id="CampaignEditionItem_1"/>
			<frameinstance modelid="CampaignEditionItem" pos="0 -7.2" id="CampaignEditionItem_2"/>
			<frameinstance modelid="CampaignEditionItem" pos="0 -14.4" id="CampaignEditionItem_3"/>
			<frameinstance modelid="CampaignEditionItem" pos="0 -21.6" id="CampaignEditionItem_4"/>
			<frameinstance modelid="CampaignEditionItem" pos="0 -28.8" id="CampaignEditionItem_5"/>
			<frameinstance modelid="CampaignEditionItem" pos="0 -36" id="CampaignEditionItem_6"/>
			<frameinstance modelid="CampaignEditionItem" pos="0 -43.2" id="CampaignEditionItem_7"/>
			<frameinstance modelid="CampaignEditionItem" pos="0 -50.4" id="CampaignEditionItem_8"/>
		</frame>

		<quad pos="6.5 -120" id="Quad_Refresh" valign="center" halign="right" size="5 5" style="Icons64x64_1" substyle="Refresh" scriptevents="1" />
		<label pos="12 -120" textsize="1.3" text="Refresh" halign="center" valign="center" class="lato"/>
		<quad pos="10.67 -5" size="7.67 7.67"  image="file://Media/Images/Obstacle/Campaign/MX.png" valign="center"/>
		<label pos="34 -5.5" textsize="5.2" text="seasons" textprefix="$t" halign="center" valign="center2" class="lato"/>
		<quad size="62 123.83" image="file://Media/Images/Obstacle/Campaign/Aside.png"/>
	</frame>
</frame>
<script><![CDATA[

#Include "MathLib" as ML
#Include "TextLib" as TL
#Include "ColorLib" as CL

{{{EventAPITypes::ML_Preproc()}}}

{{{Styles::GetDeclareGlobals()}}}

Void InitCampaignEditionsList() {
	declare K_Event P_CampaignEvent for Page;
	declare Integer P_SelectedEdition for Page;

	declare Integer ControlIndex = 0;
	foreach (I => Edition in P_CampaignEvent.Editions) {
		ControlIndex += 1;

		declare CMlFrame Frame_CampaignEdition = (Page.GetFirstChild("CampaignEditionItem_" ^ ControlIndex) as CMlFrame);
		declare CMlLabel Label_CampaignEdition = (Frame_CampaignEdition.GetFirstChild("Label_CampaignEdition") as CMlLabel);

		declare EditionName = Edition.name;
		if (Edition.subtitle != "")
			EditionName ^= " " ^ Edition.subtitle;

		Label_CampaignEdition.SetText(EditionName);
		Label_CampaignEdition.DataAttributeSet("editionid", TL::ToText(I));

		declare Vec3 TextColor = CL::HexToRgb("B4B4B4");
		if (P_SelectedEdition == I) {
			TextColor = CL::HexToRgb("FFFFFF");
		}

		Label_CampaignEdition.TextColor = TextColor;
	}
}

main() {
	declare Integer P_SelectedEdition for Page = -1;
	declare Integer SelectedCampaign = -1;

	wait(P_SelectedEdition != -1);

	while (True) {
		if (SelectedCampaign != P_SelectedEdition) {
			InitCampaignEditionsList();
			SelectedCampaign = P_SelectedEdition;
		}

		foreach (Event in PendingEvents) {
			{{{Styles::GetEventLoopActiveItem()}}}

			switch (Event.Type) {
				case CMlScriptEvent::Type::MouseOver: {
					if (Event.ControlId != "Label_CampaignEdition") continue;

					declare CMlLabel Label_Edition = (Event.Control as CMlLabel);
					Label_Edition.TextColor = CL::HexToRgb("FFFFFF");
				}
				case CMlScriptEvent::Type::MouseOut: {
					if (Event.ControlId != "Label_CampaignEdition") continue;

					declare CMlLabel Label_Edition = (Event.Control as CMlLabel);
					if (!Label_Edition.DataAttributeExists("editionid")) continue;
					declare Integer EditionIdx = TL::ToInteger(Event.Control.DataAttributeGet("editionid"));
					if (EditionIdx == P_SelectedEdition) continue;

					Label_Edition.TextColor = CL::HexToRgb("B4B4B4");
				}
				case CMlScriptEvent::Type::MouseClick: {
					switch (Event.ControlId) {
						case "Label_CampaignEdition": {
							// FIXME: se baser sur l'idx de l'associated array et pas sur son emplacement
							if (!Event.Control.DataAttributeExists("editionid")) continue;
							declare Text RawEditionIdx = Event.Control.DataAttributeGet("editionid");
							declare Integer EditionIdx = TL::ToInteger(RawEditionIdx);
							if (EditionIdx == P_SelectedEdition) continue;
							SendCustomEvent("update_edition_selection", [RawEditionIdx]);
						}
						case "Quad_Refresh": {
							SendCustomEvent("refresh", []);
						}
					}
				}
			}
		}

		yield;
	}
}

]]></script>
</manialink>
""";
}

Void Load() {
	Campaign::Load(GetName(), [
		GetSideBarName() => BuildSideBar()
	]);
	Campaign::SetEventHandle(GetName(), "campaign");
}

Void Loop() {
	Campaign::Loop(GetName(), Windows::GetPageOfSubLayer(GetName(), GetSideBarName()));

	foreach (Event in PendingEvents) {
		if (Event.Type != CManiaAppEvent::EType::LayerCustomEvent
			|| Event.CustomEventLayer.AttachId != GetSideBarName())
		{
			continue;
		}

		switch (Event.CustomEventType) {
			case "update_edition_selection": {
				declare Integer EditionId = TL::ToInteger(Event.CustomEventData[0]);
				Campaign::SelectEdition(GetName(), "campaign", EditionId);
			}

			case "refresh": {
				Campaign::Refresh(GetName());
			}
		}
	}
}