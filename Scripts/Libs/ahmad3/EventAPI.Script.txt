#Include "TextLib" as TL

#Include "Libs/smokegun/Constants.Script.txt" as Constants
#Include "Libs/ahmad3/Utils.Script.txt" as Utils

#Include "Libs/ahmad3/InnerEventAPI.Script.txt" as Inner
#Include "Libs/ahmad3/EventAPITypes.Script.txt" as Types

#Include "Libs/ahmad3/AuthUtils.Script.txt" as AuthUtils

declare Boolean G_AuthHeadersPending;

Boolean EventHasContent(Text _EventHandle) {
    return Inner::EventHasContent(_EventHandle);
}

Types::K_Event GetEvent(Text _EventHandle) {
    return Inner::GetEvent(_EventHandle);
}

Void LoadEdition(Text _EventHandle, Integer _EventEdition, Boolean _Lazy) {
    Inner::LoadEdition(_EventHandle, _EventEdition, _Lazy);
}

Void LoadEdition(Text _EventHandle, Integer _EventEdition) {
    Inner::LoadEdition(_EventHandle, _EventEdition);
}

Void Private_UpdateAuthHeaders() {
    declare Text Token = AuthUtils::GetUserToken(LocalUser);
    if (G_AuthHeadersPending && Token != "") {
        Inner::SetAuthHeaders("\nPlayerLogin: " ^ LocalUser.Login ^ "\nAuthorization: " ^ Token);
        G_AuthHeadersPending = False;
    }
}

Void Load() {
    G_AuthHeadersPending = True;
    Private_UpdateAuthHeaders();
    Inner::Init();
}

Void Loop() {
    Private_UpdateAuthHeaders();
    Inner::Loop();
}