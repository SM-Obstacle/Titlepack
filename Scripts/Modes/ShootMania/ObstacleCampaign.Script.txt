#Extends "Modes/ShootMania/Obstacle.Script.txt"

#Include "Libs/miltant/UI/EndScreen.Script.txt" as EndScreen

// This is used by the TP to know if we're playing the last map of the event or not.
#Setting S_LastMap False as "<hidden>"
// This is sent by the TP to identify which layer was used to make the player play the map.
#Setting S_LayerNameUsedInTp "" as "<hidden>"

***Match_InitServer***
***
G_ForceInvisibleSkin = False;

log("mode is Obstacle Campaign");
***

***Obs_LoadHud***
***
// If local play, hide some overlays
if (ServerLogin == "") {
    UIManager.UIAll.OverlayHideCountdown = True;
    UIManager.UIAll.OverlayHideChrono = True;
    UIManager.UIAll.OverlayHideNotices = True;
}
***

***Match_AfterLoadMap***
***
if (ServerAdmin == Null) {
    declare CSmPlayer Player = Players[0];
    declare Boolean ObsCampaignEvent_LoadingDialogPlayingMap for Player.User = False;
    ObsCampaignEvent_LoadingDialogPlayingMap = True;
}
***

***Obs_YieldRecordsWidget***
***
MedalsWidget::Yield();
***

***Campaign_Match_Yield***
***
switch (Event.CustomEventType) {
    case "campaign:improve": {
        declare Player = SM::GetPlayer(Event.CustomEventData[0]);
        Obstacle::ObsRespawnPlayer(Player, True);
        Layers::Detach("EndScreen", Player);
        UIManager.GetUI(Player).UISequence = CUIConfig::EUISequence::Playing;
    }
    case "campaign:next_map": {
        if (ServerAdmin == Null) MB_Private_StopMatch();
    }
}
***

***Obs_PlayerTookGoalRS***
***
+++ Campaign_EndRound +++
***

***Obs_PlayerTookGoal***
***
+++ Campaign_EndRound +++
***

***Obs_CreateRecordsLayer***
***
Layers::Create("Records", MedalsWidget::GetLayer());
***

***Obs_CreateSurvivalRankingLayer***
***
DoNothing();
***

***Obs_CreateRespawnBehaviorLayer***
***
Layers::Create("RespawnBehavior", RespawnBehavior::GetLayer(True));
***

***Campaign_EndRound***
***
// DestroyUI(False);
Layers::Attach("EndScreen", Player);

UIManager.GetUI(Player).OverlayHideNotices = True;
UIManager.GetUI(Player).UISequence = CUIConfig::EUISequence::Podium;
***

***Campaign_CreateUI***
***
Layers::Create("EndScreen", EndScreen::GetLayer(ServerAdmin == Null, S_LastMap, S_LayerNameUsedInTp));
***

***MB_Private_EnableLadder***
***
MB_Private_EnableLadder = False;
***

***MB_Private_EnablePodiumSequence***
***
MB_Private_EnablePodiumSequence = False;
***

***MB_Private_EnableChannelProgression***
***
MB_Private_EnableChannelProgression = True;
***